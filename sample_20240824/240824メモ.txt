


==========================================================================
==========================================================================
==========================================================================
 // ★★ 
 // ★★ 

全8回



=====================================
24/08/24 第8回目
=====================================

---【前半：座学】---

ユースケースとしてはほとんどテクスチャオブジェクトをカラーバッファとして使う。

ワンパスで出来上がることは、ほぼ無い…。







---【後半：実習】---

---【017】---

1パス：トーラスをフレームバッファに焼く。ピンクの背景にトーラスがある状態。
2パス：背景グレーにボックスを書いて、ボックスに1パス目のテクスチャを貼り付ける。


質感を分けたければ、シェーダを分ける。
同じ質感でいいなら、シェーダを分けなくてもいいし、分けても良い。


「すいません、１００％ついていけてない感じがするんですが、1パス目でトーラスで、２パス目でピンクのキューブを描画しているんですか？」
　┗　ちょっと違う。
「トーラスの背景がピンクで、箱自体は最初は色ついてないんですね。」
　┗　そうです！


「今回のサンプルでは gl.TEXTURE0 を使うのが仕様になってる感じでしょうか。命名から0以外もありそうな。」
　┗　テクスチャユニットは若番から埋めていく。
既定のテクスチャユニットは0番なので、書かなくても動くかも…。

「createFramebufferでも0番を指定してたので関連しているのかな、と思った次第でした」
　┗　ここでも0番を使っている理由は同じ。






---【018】---

ヴィネット：画面の四隅が暗くなる。

今回は画面全体をフレームバッファの大きさに合わせたいので、
画面の大きさが変わったら、フレームバッファの大きさも変わるようにリサイズ処理を入れている。


「こういうシェーダ内の計算を図解で見れるツールとかってありますか？」
　┗　無いかも…。

「ちょっと違うかもですが、GLSL Grapher（ https://fordhurley.com/glsl-grapher/ ）はどうでしょう？」
　┗　グラフとして可視化するならこういうこと。


=====================================

※ 動画1:55くらいのところで、色デバッグの話
　　┗　色として可視化するならこういうこと。

=====================================


「まだ色と値の計算と、そのイメージがうまく処理できてないですね。シェーダ内での今のデバッグの説明ありがとうございます。こういうアプローチの仕方など、すごく参考になります！」
　┗　慣れですね…！


「この原点中心から距離を測るアプローチは、よく見かける水の波紋みたいな表現にも応用できそうですね」
　┗　天才！そういうこと！




---【019】---

https://thebookofshaders.com/10/
日本語のページもある。






---【020】---

基本的には重たい処理。

最初にフレームバッファに焼いておく。
あとはそれをテクスチャとして参照するだけにすると、大分マシになる。


・静止画の画像で出来るのか？
・リアルタイムじゃないと無理か？
というのを最初に考えること。


品質とスピードのバランスで、だいたい Simplex Noise を使うことが多い。



「例えばノイズ画像や一回テクスチャに貼り付けてノイズを作成した場合、リアルタイムにノイズを動かすことは可能なのでしょうか？」
　┗　一回焼いちゃうと動かせない。
「「もやもや」と動かしてくれって言われたらリアルタイムに生成するしかないのですね。わかりました！」
　┗　「もやもや」の最適解は Simplex Noise だと思います。
静止画由来のノイズでも「もやもや」っぽく見せられるのは見せられる…。




「ノイズというとパーリンノイズという名前をよく聞くのですが、今日学んだノイズたちとはまた違うものなのですかね。」
　┗　パーリンノイズというのは、パーリンさんが考えたノイズ。
https://thebookofshaders.com/11/

「ありがとうございます！Book of shader読んでみます（理解できるかは...）。」
「noise については此方の書籍が手軽で詳しいです。perlin noise についても記載があります。https://www.amazon.co.jp/dp/B0BBFDFJHF」





---【021】---

水面の下、水中が透けて見えてるとかいう場合に使える。
燃えカスっぽくも見えたりするので、火が燃えて灰になっていく様子とかにも。


「見当違いな質問だったら恐縮なのですが、サンプル021の歪み係数を足し算されてますがエフェクトを合成する感じで掛け算かなっと思って試したら全く違う見た目になりました。ここが足し算なのはそういうものって覚えてしまった方がいいでしょうか？変な質問ですみません。」
　┗　色と色を合成する場合なら、足しても掛けても良い。
ここは座標なので、足し算になる。









---【022】---

ブラー　＝　ぼかし
ガウシアンブラー　＝　ぼかすアルゴリズムの種類の一つ。

ガウシアンブラーは最低3パス。
フレームバッファを複数使わないと出来ない。


ガウス関数：どれくらいの割合で混ぜるか、というのを良い感じにしてくれる。


ブルームも、ぼかして上から乗せている。
実際はブラーをかけて、上から乗せている。



「horizontalのフラグは、paneを使用して切り替えることできますよね？　それで横のみか縦のみかのぼかしを見比べたいです。」
　┗　出来るはずです。



「例えば、テクセルの大きさを倍にすると、ぼかしの処理を半分に抑えられたりするんでしょうか…？」
　┗　キレイにぼけるかどうかわからない…。
「ありがとうございます！解像度半分のことでした。その場合でもものによってはキレイに見えたらいいなと…。」



「すいません、聞き逃したかもしれませんが、vec2 fc = gl_FragCoord.st;　ここはなぜxyではなくて、stなのでしょうか？」
　┗　説明してないので、聞き逃してないです！
スウィズル演算子：4つの要素を扱う記号なので、どれ使っても良い。






---【まとめ】---




課題：



------------------
【講義後の質問】
------------------


